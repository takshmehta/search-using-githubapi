{"version":3,"sources":["Components/UserCard.js","Components/Repos.js","context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layout/Footer.js","layout/Navbar.js","App.js","Config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","alt","src","avatar_url","CardBody","name","email","bio","public_repos","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","href","clone_url","target","description","language","homepage","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Signin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ibAqBeA,EAlBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,yBACd,yBAAKC,IAAI,GAAGC,IAAKJ,EAAKK,WAAYH,UAAU,kBAC5C,kBAACI,EAAA,EAAD,KACE,yBAAKJ,UAAU,gBAAgBF,EAAKO,MACpC,yBAAKL,UAAU,gBAAgBF,EAAKQ,OACpC,yBAAKN,UAAU,gBAAgBF,EAAKS,KACpC,yBAAKP,UAAU,gBAAf,iBAA6CF,EAAKU,cAIlD,yBAAKR,UAAU,gBAAf,cAA0CF,EAAKW,c,gBCiCxCC,EA5CD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,KAGzBC,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,IAAMC,IAAIP,GADhB,gBACTQ,EADS,EACTA,KACRL,EAASK,GAFQ,2CAAH,qDAQhB,OAJAC,qBAAU,WACRL,MACC,CAACJ,IAGF,kBAACU,EAAA,EAAD,KACGR,EAAMS,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAKG,IACvB,yBAAK1B,UAAU,gBAAf,aACY,0BAAMA,UAAU,aAAauB,EAAKlB,KAAlC,MAEZ,6BACE,uBAAGsB,KAAMJ,EAAKK,UAAWC,OAAO,UAC9B,0BAAM7B,UAAU,gBAAhB,+BAGJ,yBAAKA,UAAU,gBAAf,gBACe,0BAAMA,UAAU,aAAhB,IAA8BuB,EAAKO,YAAnC,MAEf,yBAAK9B,UAAU,gBAAf,aACY,0BAAMA,UAAU,aAAhB,IAA8BuB,EAAKQ,SAAnC,MAEZ,yBAAK/B,UAAU,gBACM,KAAlBuB,EAAKS,SACJ,GAEA,uBAAGL,KAAMJ,EAAKS,SAAUH,OAAO,UAA/B,uBCnCDI,EAAcC,0BC8DZC,EA7CF,WAAO,IAAD,EACXC,EAAUC,qBAAWJ,GADV,EAESrB,mBAAS,IAFlB,mBAEV0B,EAFU,KAEHC,EAFG,OAGO3B,mBAAS,MAHhB,mBAGVd,EAHU,KAGJ0C,EAHI,KAKXC,EAAY,uCAAG,8BAAAzB,EAAA,+EAEMC,IAAMC,IAAN,uCAA0CoB,IAFhD,gBAETnB,EAFS,EAETA,KACRqB,EAAQrB,GACRuB,QAAQC,IAAI,CAAExB,SAJG,gDAMjByB,YAAM,0BAA2B,CAAEC,KAAM,UANxB,yDAAH,qDAWlB,OAAI,UAACT,EAAQtC,YAAT,aAAC,EAAcgD,KAKjB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhD,UAAU,SACb,kBAACiD,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEP,KAAK,OACLQ,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAE1B,OAAOwB,QACnCG,YAAY,gCAEd,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACC,EAAA,EAAD,CAAQC,QAASnB,EAAcoB,MAAM,UAArC,gBAKH/D,EAAO,kBAAC,EAAD,CAAUA,KAAMA,IAAW,MAErC,kBAACmD,EAAA,EAAD,CAAKC,GAAG,KAAKpD,EAAO,kBAAC,EAAD,CAAOa,UAAWb,EAAKa,YAAgB,QAtBxD,kBAAC,IAAD,CAAUmD,GAAG,a,4CCmETC,EAlFA,WAAO,IAAD,EACb3B,EAAUC,qBAAWJ,GADR,EAGOrB,mBAAS,IAHhB,mBAGZN,EAHY,KAGL0D,EAHK,OAIapD,mBAAS,IAJtB,mBAIZqD,EAJY,KAIFC,EAJE,KA2BnB,iBAAI9B,EAAQtC,YAAZ,aAAI,EAAcgD,KACT,kBAAC,IAAD,CAAUgB,GAAG,MAGpB,kBAACf,EAAA,EAAD,CAAW/C,UAAU,eACnB,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkB,GAAI,EAAGnE,UAAU,oBACpB,kBAACD,EAAA,EAAD,CAAMC,UAAU,WACd,kBAACoE,EAAA,EAAD,CAAMpE,UAAU,aAAaqE,SAblB,SAACd,GACpBA,EAAEe,iBAhBFC,IACGC,OACAC,2BAA2BnE,EAAO2D,GAClCS,MAAK,SAACC,GACLjC,QAAQC,IAAIgC,GACZvC,EAAQI,QAAQ,CAAElC,MAAOqE,EAAI7E,KAAKQ,MAAOwC,IAAK6B,EAAI7E,KAAKgD,SAExD8B,OAAM,SAACC,GACNnC,QAAQC,IAAIkC,GACZjC,YAAMiC,EAAMC,QAAS,CACnBjC,KAAM,eAmBF,kBAACkC,EAAA,EAAD,CAAY/E,UAAU,IAAtB,eACA,kBAACI,EAAA,EAAD,KACE,kBAAC4E,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAQC,GAAI,GAAvB,SAGA,kBAACnC,EAAA,EAAD,CAAKmC,GAAI,GACP,kBAAChC,EAAA,EAAD,CACEP,KAAK,QACLxC,KAAK,QACLqB,GAAG,QACH8B,YAAY,qBACZH,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOS,EAAST,EAAE1B,OAAOwB,YAIzC,kBAAC2B,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAWC,GAAI,GAA1B,YAGA,kBAACnC,EAAA,EAAD,CAAKmC,GAAI,GACP,kBAAChC,EAAA,EAAD,CACEP,KAAK,WACLxC,KAAK,WACLqB,GAAG,WACH8B,YAAY,qBACZH,MAAOY,EACPX,SAAU,SAACC,GAAD,OAAOW,EAAYX,EAAE1B,OAAOwB,aAK9C,kBAACgC,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CAAQd,KAAK,SAASyC,OAAK,EAACzB,MAAM,WAAlC,kBCYDE,EAlFA,WAAO,IAAD,EACb3B,EAAUC,qBAAWJ,GADR,EAGOrB,mBAAS,IAHhB,mBAGZN,EAHY,KAGL0D,EAHK,OAIapD,mBAAS,IAJtB,mBAIZqD,EAJY,KAIFC,EAJE,KA2BnB,iBAAI9B,EAAQtC,YAAZ,aAAI,EAAcgD,KACT,kBAAC,IAAD,CAAUgB,GAAG,MAGpB,kBAACf,EAAA,EAAD,CAAW/C,UAAU,eACnB,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkB,GAAI,EAAGnE,UAAU,oBACpB,kBAACD,EAAA,EAAD,CAAMC,UAAU,WACd,kBAACoE,EAAA,EAAD,CAAMpE,UAAU,aAAaqE,SAblB,SAACd,GACpBA,EAAEe,iBAhBFC,IACGC,OACAe,+BAA+BjF,EAAO2D,GACtCS,MAAK,SAACC,GACLjC,QAAQC,IAAIgC,GACZvC,EAAQI,QAAQ,CAAElC,MAAOqE,EAAI7E,KAAKQ,MAAOwC,IAAK6B,EAAI7E,KAAKgD,SAExD8B,OAAM,SAACC,GACNnC,QAAQC,IAAIkC,GACZjC,YAAMiC,EAAMC,QAAS,CACnBjC,KAAM,eAmBF,kBAACkC,EAAA,EAAD,CAAY/E,UAAU,IAAtB,eACA,kBAACI,EAAA,EAAD,KACE,kBAAC4E,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAQC,GAAI,GAAvB,SAGA,kBAACnC,EAAA,EAAD,CAAKmC,GAAI,GACP,kBAAChC,EAAA,EAAD,CACEP,KAAK,QACLxC,KAAK,QACLqB,GAAG,QACH8B,YAAY,qBACZH,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOS,EAAST,EAAE1B,OAAOwB,YAIzC,kBAAC2B,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAWC,GAAI,GAA1B,YAGA,kBAACnC,EAAA,EAAD,CAAKmC,GAAI,GACP,kBAAChC,EAAA,EAAD,CACEP,KAAK,WACLxC,KAAK,WACLqB,GAAG,WACH8B,YAAY,qBACZH,MAAOY,EACPX,SAAU,SAACC,GAAD,OAAOW,EAAYX,EAAE1B,OAAOwB,aAK9C,kBAACgC,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CAAQd,KAAK,SAASyC,OAAK,EAACzB,MAAM,WAAlC,kBC9ED2B,EAXM,WACjB,OACI,6BACI,oDCUGC,EAZA,WACb,OACE,kBAAC1C,EAAA,EAAD,CACE2C,OAAK,EACLC,IAAI,SACJ3F,UAAU,kEAHZ,2C,wEC2DW4F,EAjDA,WAAO,IAAD,IACbxD,EAAUC,qBAAWJ,GADR,EAESrB,oBAAS,GAFlB,mBAEZiF,EAFY,KAEJC,EAFI,KAKnB,OACE,kBAACC,EAAA,EAAD,CAAQlC,MAAM,OAAOmC,OAAK,EAACC,OAAO,MAChC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMpC,GAAG,IAAI9D,UAAU,cAAvB,iBAIF,kBAACmG,EAAA,EAAD,CAAYnG,UAAU,eACnB,UAAAoC,EAAQtC,YAAR,eAAcQ,OAAQ8B,EAAQtC,KAAKQ,MAAQ,IAE9C,kBAAC8F,EAAA,EAAD,CAAexC,QAXJ,kBAAMkC,GAAWD,MAY5B,kBAACQ,EAAA,EAAD,CAAUR,OAAQA,EAAQS,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKvG,UAAU,UAAUsG,QAAM,IAC5B,UAAAlE,EAAQtC,YAAR,eAAcQ,OACb,kBAACkG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE7C,QAAS,WACPxB,EAAQI,QAAQ,OAElBxC,UAAU,cAJZ,WAUF,oCACE,kBAACwG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASd,IAAKe,IAAM5C,GAAG,UAAU9D,UAAU,cAA3C,WAIF,kBAACwG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASd,IAAKe,IAAM5C,GAAG,UAAU9D,UAAU,cAA3C,gBC/BhBuE,IAASoC,cCrBM,CACbC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDejB,IAmBeC,EAnBH,WAAO,IAAD,EACQxG,mBAAS,MADjB,mBACTd,EADS,KACH0C,EADG,KAEhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAACP,EAAYoF,SAAb,CAAsBhE,MAAO,CAAEvD,OAAM0C,YACnC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAIC,UAAWrF,IACjC,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,UAAUC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWzD,IACvC,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,IAAIC,UAAWhC,KAEnC,kBAAC,EAAD,SExBYkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3D,MAAK,SAAA4D,GACJA,EAAaC,gBAEd3D,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.6baadee1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\n\r\nconst UserCard = ({ user }) => {\r\n  return (\r\n    <Card className=\"text-center mt-3 mb-4\">\r\n      <img alt=\"\" src={user.avatar_url} className=\"img_thumbnail\" />\r\n      <CardBody>\r\n        <div className=\"text-primary\">{user.name}</div>\r\n        <div className=\"text-primary\">{user.email}</div>\r\n        <div className=\"text-primary\">{user.bio}</div>\r\n        <div className=\"text-primary\">Public repos: {user.public_repos}</div>\r\n        {/* <div className=\"text-primary\">\r\n          Available for hiring {user.hireable ? \"Yes\" : \"No\"}\r\n        </div> */}\r\n        <div className=\"text-primary\">Followers: {user.followers}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst Repos = ({ repos_url }) => {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const fetchRepos = async () => {\r\n    const { data } = await Axios.get(repos_url);\r\n    setRepos(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchRepos();\r\n  }, [repos_url]);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {repos.map((repo) => (\r\n        <ListGroupItem key={repo.id}>\r\n          <div className=\"text-success\">\r\n            Repo Name:<span className=\"text-info\">{repo.name} </span>\r\n          </div>\r\n          <div>\r\n            <a href={repo.clone_url} target=\"_blank\">\r\n              <span className=\"text-success\"> Click here to open repo </span>\r\n            </a>\r\n          </div>\r\n          <div className=\"text-success\">\r\n            Description: <span className=\"text-info\"> {repo.description} </span>\r\n          </div>\r\n          <div className=\"text-success\">\r\n            Language: <span className=\"text-info\"> {repo.language} </span>\r\n          </div>\r\n          <div className=\"text-success\">\r\n            {repo.homepage === \"\" ? (\r\n              \"\"\r\n            ) : (\r\n              <a href={repo.homepage} target=\"_blank\">\r\n                Open Website\r\n              </a>\r\n            )}\r\n          </div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from \"react\"\r\n\r\nexport const UserContext = createContext();","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Repos from \"../Components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () => {\r\n  const context = useContext(UserContext);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\r\n      setUser(data);\r\n      console.log({ data });\r\n    } catch (error) {\r\n      toast(\"Not able to find user !\", { type: \"error\" });\r\n    }\r\n  };\r\n  //Put home page behind login\r\n\r\n  if (!context.user?.uid) {\r\n    return <Redirect to=\"/Signin\" />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick={fetchDetails} color=\"danger\">\r\n                Fetch User\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user={user} /> : null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card className=\"bg-info\">\r\n            <Form className=\"text-white\" onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignIn here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"warning\">\r\n                  Sign In\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card className=\"bg-info\">\r\n            <Form className=\"text-white\" onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignUp here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"success\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                404 page not found\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PageNotFound;","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      tag=\"footer\"\r\n      className=\"text-center bg-dark text-white text-uppercase fixed-bottom p-3\"\r\n    >\r\n      Github User Search APP with Firebase !\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  NavbarToggler,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst Header = () => {\r\n  const context = useContext(UserContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <Navbar color=\"dark\" light expand=\"md\">\r\n      <NavbarBrand>\r\n        <Link to=\"/\" className=\"text-white\">\r\n          GIT Fire App\r\n        </Link>\r\n      </NavbarBrand>\r\n      <NavbarText className=\"text-white\">\r\n        {context.user?.email ? context.user.email : \"\"}\r\n      </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          {context.user?.email ? (\r\n            <NavItem>\r\n              <NavLink\r\n                onClick={() => {\r\n                  context.setUser(null);\r\n                }}\r\n                className=\"text-white\"\r\n              >\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          ) : (\r\n            <>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/Signin\" className=\"text-white\">\r\n                  Signin\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/Signup\" className=\"text-white\">\r\n                  Signup\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport { UserContext } from \"./context/UserContext\";\nimport Footer from \"./layout/Footer\";\nimport Header from \"./layout/Navbar\";\n\nimport firebaseConfig from \"./Config/firebaseConfig\";\n//init firebases\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/Signin\" component={Signin} />\n          <Route exact path=\"/Signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n  apiKey: \"AIzaSyBSpw8841yVeW3DLqKb1P_qvPVKSReWL8I\",\r\n  authDomain: \"mygitapp-c148c.firebaseapp.com\",\r\n  databaseURL: \"https://mygitapp-c148c.firebaseio.com\",\r\n  projectId: \"mygitapp-c148c\",\r\n  storageBucket: \"mygitapp-c148c.appspot.com\",\r\n  messagingSenderId: \"381606163409\",\r\n  appId: \"1:381606163409:web:cc261f44768280b74b66f0\",\r\n  measurementId: \"G-ZCBQ02G2VW\",\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}